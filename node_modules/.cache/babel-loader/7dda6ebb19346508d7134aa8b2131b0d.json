{"ast":null,"code":"import _toConsumableArray from\"/Users/itg/Jamming/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/itg/Jamming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/itg/Jamming/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/itg/Jamming/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/itg/Jamming/node_modules/@babel/runtime/helpers/esm/createSuper\";import'./App.css';import React from'react';import Spotify from'../../util/Spotify';import SearchBar from'../SearchBar/SearchBar';import SearchResults from'../SearchResults/SearchResults';import Playlist from'../Playlist/Playlist';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={searchResults:[],playlistName:'My playlist',playlistTracks:[]};_this._bind('updatePlaylistName','addTrack','removeTrack','savePlaylist','search');return _this;}_createClass(App,[{key:\"addTrack\",value:function addTrack(track){if(!this.state.playlistTracks.find(function(playlistTrack){return playlistTrack.id===track.id;})){this.setState(function(prevState){return{playlistTracks:[].concat(_toConsumableArray(prevState.playlistTracks),[track])};});}}},{key:\"removeTrack\",value:function removeTrack(track){this.setState({playlistTracks:this.state.playlistTracks.filter(function(playlistTrack){return playlistTrack.id!==track.id;})});}},{key:\"updatePlaylistName\",value:function updatePlaylistName(name){this.setState({playlistName:name});}},{key:\"savePlaylist\",value:function savePlaylist(){var trackUris=this.state.playlistTracks.map(function(playlistTrack){return playlistTrack.uri;});Spotify.savePlaylist(this.state.playlistName,trackUris);this.setState({searchResults:[]});this.updatePlaylistName('My playlist');console.info(trackUris);}},{key:\"search\",value:function search(term){var _this2=this;Spotify.search(term).then(function(searchResults){return _this2.setState({searchResults:searchResults});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Ja\",/*#__PURE__*/_jsx(\"span\",{className:\"highlight\",children:\"mmm\"}),\"ing\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:this.search}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-playlist\",children:[/*#__PURE__*/_jsx(SearchResults,{searchResults:this.state.searchResults,onAdd:this.addTrack}),/*#__PURE__*/_jsx(Playlist,{playlistTracks:this.state.playlistTracks,playlistName:this.state.playlistName,onRemove:this.removeTrack,onNameChange:this.updatePlaylistName,onSave:this.savePlaylist})]})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/itg/Jamming/src/Components/App/App.js"],"names":["React","Spotify","SearchBar","SearchResults","Playlist","App","props","state","searchResults","playlistName","playlistTracks","_bind","track","find","playlistTrack","id","setState","prevState","filter","name","trackUris","map","uri","savePlaylist","updatePlaylistName","console","info","term","search","then","addTrack","removeTrack","Component"],"mappings":"ifAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,C,2FAGMC,CAAAA,G,sGACJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,aAAa,CAAE,EADJ,CAEXC,YAAY,CAAE,aAFH,CAGXC,cAAc,CAAE,EAHL,CAAb,CAKA,MAAKC,KAAL,CAAW,oBAAX,CAAiC,UAAjC,CAA6C,aAA7C,CAA4D,cAA5D,CAA4E,QAA5E,EAPiB,aAQlB,C,wCAED,kBAASC,KAAT,CAAgB,CACd,GAAI,CAAC,KAAKL,KAAL,CAAWG,cAAX,CAA0BG,IAA1B,CAA+B,SAAAC,aAAa,QAAIA,CAAAA,aAAa,CAACC,EAAd,GAAqBH,KAAK,CAACG,EAA/B,EAA5C,CAAL,CAAqF,CACnF,KAAKC,QAAL,CAAc,SAAAC,SAAS,QAAK,CAC1BP,cAAc,8BAAMO,SAAS,CAACP,cAAhB,GAAgCE,KAAhC,EADY,CAAL,EAAvB,EAGD,CAEF,C,2BAED,qBAAYA,KAAZ,CAAmB,CACjB,KAAKI,QAAL,CAAc,CACZN,cAAc,CAAE,KAAKH,KAAL,CAAWG,cAAX,CAA0BQ,MAA1B,CAAiC,SAAAJ,aAAa,QAAIA,CAAAA,aAAa,CAACC,EAAd,GAAqBH,KAAK,CAACG,EAA/B,EAA9C,CADJ,CAAd,EAGD,C,kCAGD,4BAAmBI,IAAnB,CAAyB,CACvB,KAAKH,QAAL,CAAc,CACZP,YAAY,CAAEU,IADF,CAAd,EAGD,C,4BAED,uBAAe,CACb,GAAMC,CAAAA,SAAS,CAAG,KAAKb,KAAL,CAAWG,cAAX,CAA0BW,GAA1B,CAA8B,SAAAP,aAAa,QAAIA,CAAAA,aAAa,CAACQ,GAAlB,EAA3C,CAAlB,CACArB,OAAO,CAACsB,YAAR,CAAqB,KAAKhB,KAAL,CAAWE,YAAhC,CAA8CW,SAA9C,EACA,KAAKJ,QAAL,CAAc,CACZR,aAAa,CAAE,EADH,CAAd,EAGA,KAAKgB,kBAAL,CAAwB,aAAxB,EACAC,OAAO,CAACC,IAAR,CAAaN,SAAb,EACD,C,sBAED,gBAAOO,IAAP,CAAa,iBACX1B,OAAO,CAAC2B,MAAR,CAAeD,IAAf,EACGE,IADH,CACQ,SAAArB,aAAa,QAAI,CAAA,MAAI,CAACQ,QAAL,CAAc,CACnCR,aAAa,CAAEA,aADoB,CAAd,CAAJ,EADrB,EAID,C,sBAEH,iBAAS,CACP,mBACE,oCACE,wCAAM,aAAM,SAAS,CAAC,WAAhB,iBAAN,SADF,cAEE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,SAAD,EAAW,QAAQ,CAAE,KAAKoB,MAA1B,EADF,cAEE,aAAK,SAAS,CAAC,cAAf,wBACE,KAAC,aAAD,EAAe,aAAa,CAAE,KAAKrB,KAAL,CAAWC,aAAzC,CAAwD,KAAK,CAAE,KAAKsB,QAApE,EADF,cAEE,KAAC,QAAD,EAAU,cAAc,CAAE,KAAKvB,KAAL,CAAWG,cAArC,CAAqD,YAAY,CAAE,KAAKH,KAAL,CAAWE,YAA9E,CAA4F,QAAQ,CAAE,KAAKsB,WAA3G,CAAwH,YAAY,CAAE,KAAKP,kBAA3I,CAA+J,MAAM,CAAE,KAAKD,YAA5K,EAFF,GAFF,GAFF,GADF,CAYD,C,iBA/DiBvB,KAAK,CAACgC,S,EAkExB,cAAe3B,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Spotify from '../../util/Spotify';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My playlist',\n      playlistTracks: []\n    }\n    this._bind('updatePlaylistName', 'addTrack', 'removeTrack', 'savePlaylist', 'search');\n  }\n\n  addTrack(track) {\n    if (!this.state.playlistTracks.find(playlistTrack => playlistTrack.id === track.id)) {\n      this.setState(prevState => ({\n        playlistTracks: [...prevState.playlistTracks, track]\n      }));\n    }\n    \n  }\n\n  removeTrack(track) {\n    this.setState({\n      playlistTracks: this.state.playlistTracks.filter(playlistTrack => playlistTrack.id !== track.id)\n    });\n  }\n\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(playlistTrack => playlistTrack.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris);\n    this.setState({\n      searchResults: []\n    });\n    this.updatePlaylistName('My playlist');\n    console.info(trackUris);\n  }\n\n  search(term) {\n    Spotify.search(term)\n      .then(searchResults => this.setState({\n        searchResults: searchResults\n      }));\n  }\n\nrender() {\n  return (\n    <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n        <SearchBar onSearch={this.search} />\n        <div className=\"App-playlist\">\n          <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n          <Playlist playlistTracks={this.state.playlistTracks} playlistName={this.state.playlistName} onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist} />\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}