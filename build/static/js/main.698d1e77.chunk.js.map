{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/Tracklist/Tracklist.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["spotifyUrl","accessToken","undefined","expiresIn","Spotify","getAccessToken","urlAccessToken","window","location","href","match","urlExpiresIn","setTimeout","history","pushState","search","term","fetch","headers","Authorization","then","response","ok","json","console","log","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","cover","images","url","preview","preview_url","savePlaylist","trackUris","length","userId","playlistId","createPlaylistUrl","method","body","JSON","stringify","addPlaylistTracksUrl","uris","SearchBar","props","state","bind","handleTermChange","this","onSearch","event","setState","target","value","className","onChange","placeholder","onClick","React","Component","Track","addTrack","removeTrack","onAdd","onRemove","renderAction","Tracklist","isRemoval","SearchResults","searchResults","Playlist","handleNameChange","e","onNameChange","defaultValue","playlistTracks","onSave","App","playlistName","updatePlaylistName","find","playlistTrack","prevState","filter","info","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.698d1e77.chunk.js","sourcesContent":["const clientId = '366387033df94efb9fc7466882437dcd';\nconst redirectUri = 'http://marunouchisrv.surge.sh/';\nconst spotifyUrl = `https://accounts.spotify.com/authorize?response_type=token&scope=playlist-modify-public&client_id=${clientId}&redirect_uri=${redirectUri}`;\nlet accessToken = undefined;\nlet expiresIn = undefined;\n\n\nconst Spotify = {\n    getAccessToken() {\n      if (accessToken) {\n        return accessToken;\n      }\n      const urlAccessToken = window.location.href.match(/access_token=([^&]*)/);\n      const urlExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\n      if (urlAccessToken && urlExpiresIn) {\n        accessToken = urlAccessToken[1];\n        expiresIn = urlExpiresIn[1];\n        window.setTimeout(() => accessToken = '', expiresIn * 1000);\n        window.history.pushState('Access Token', null, '/');\n      } else {\n        window.location = spotifyUrl;\n      }\n    },\n  \n    search(term) {\n        const accessToken = Spotify.getAccessToken();\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        }).then(\n            response => { \n                if (response.ok) {\n                    return response.json();\n                } else {\n                    console.log('API request failed');\n                }\n        }).then(\n            jsonResponse => {\n            if(!jsonResponse.tracks) {\n                return [];\n            }\n            return jsonResponse.tracks.items.map(track => ({\n                id: track.id,\n                name: track.name,\n                artist: track.artists[0].name,\n                album: track.album.name,\n                uri: track.uri,\n                cover: track.album.images[2].url,\n                preview: track.preview_url\n            }));\n        });\n    },\n  \n    savePlaylist(name, trackUris) {\n      if (!name || !trackUris || trackUris.length === 0) return;\n      const userUrl = 'https://api.spotify.com/v1/me';\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      let userId = undefined;\n      let playlistId = undefined;\n      fetch(userUrl, {\n        headers: headers \n      })\n      .then(response => response.json())\n      .then(jsonResponse => userId = jsonResponse.id)\n      .then(() => {\n        const createPlaylistUrl = `https://api.spotify.com/v1/users/${userId}/playlists`;\n        fetch(createPlaylistUrl, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify({\n              name: name\n            })\n          })\n          .then(response => response.json())\n          .then(jsonResponse => playlistId = jsonResponse.id)\n          .then(() => {\n            const addPlaylistTracksUrl = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\n            fetch(addPlaylistTracksUrl, {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify({\n                uris: trackUris\n              })\n            });\n          })\n      })\n    }\n  };\nexport default Spotify;","import React from 'react';\nimport './SearchBar.css';\n\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: ''\n        };\n        this.search = this.search.bind(this);\n        this.handleTermChange = this.handleTermChange.bind(this);\n    }\n\n    search() {\n        this.props.onSearch(this.state.term);\n    }\n\n    handleTermChange(event) {\n        this.setState({ term: event.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <input onChange={this.handleTermChange} placeholder=\"Enter A Song, Album, or Artist\" />\n                <button className=\"SearchButton\" onClick={this.search}>SEARCH</button>\n            </div>\n        );\n        }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Track.css';\n\nclass Track extends React.Component {\n    constructor(props) {\n        super(props);\n        this.addTrack = this.addTrack.bind(this);\n        this.removeTrack = this.removeTrack.bind(this);\n    }\n\n    addTrack() {\n        this.props.onAdd(this.props.track);\n    }\n    removeTrack() {\n        this.props.onRemove(this.props.track);\n    }\n    renderAction() {\n        if (this.props.onRemove) {\n            return (\n                <button className=\"Track-action\" onClick={this.removeTrack}>\n                    -\n                </button>\n            )\n        }\n        else {\n            return (\n                <button className=\"Track-action\" onClick={this.addTrack}>\n                    +\n                </button>\n            )\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"Track\">\n                <div className=\"Track-information\">\n                    <h3>{this.props.track.name}</h3>\n                    <p>{this.props.track.artist} | {this.props.track.album}</p>\n                </div>\n                {this.renderAction()}\n            </div>\n        );\n    }\n}\n\nexport default Track;","import React from 'react';\nimport Track from '../Track/Track';\n\nclass Tracklist extends React.Component {\n    render() {\n        return (\n            <div className=\"TrackList\">\n                {this.props.tracks.map(track => <Track key={track.id} track={track} onRemove={this.props.onRemove} onAdd={this.props.onAdd} isRemoval={this.props.isRemoval} />)}\n            </div>     \n        );\n    }\n}\n\nexport default Tracklist;","import React from 'react';\nimport TrackList from '../Tracklist/Tracklist';\nimport './SearchResults.css';\n\nclass SearchResults extends React.Component {\n    render() {\n        return(\n            <div className=\"SearchResults\">\n                <h2>Results</h2>\n                <TrackList tracks={this.props.searchResults} onAdd={this.props.onAdd} isRemoval={false} />\n            </div>\n        );\n    }\n}\n\nexport default SearchResults;","import React from 'react';\nimport TrackList from '../Tracklist/Tracklist';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleNameChange = this.handleNameChange.bind(this);\n    }\n\n    handleNameChange(e) {\n        this.props.onNameChange(e.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"Playlist\">\n                <input defaultValue={'New Playlist'} onChange={this.handleNameChange}/>\n                <TrackList tracks={this.props.playlistTracks} onRemove={this.props.onRemove} isRemoval={true} />\n                <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;","import './App.css';\nimport React from 'react';\nimport Spotify from '../../util/Spotify';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My playlist',\n      playlistTracks: []\n    }\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n\n  }\n\n  addTrack(track) {\n    if (!this.state.playlistTracks.find(playlistTrack => playlistTrack.id === track.id)) {\n      this.setState(prevState => ({\n        playlistTracks: [...prevState.playlistTracks, track]\n      }));\n    }\n    \n  }\n\n  removeTrack(track) {\n    this.setState({\n      playlistTracks: this.state.playlistTracks.filter(playlistTrack => playlistTrack.id !== track.id)\n    });\n  }\n\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(playlistTrack => playlistTrack.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris);\n    this.setState({\n      searchResults: []\n    });\n    this.updatePlaylistName('My playlist');\n    console.info(trackUris);\n  }\n\n  search(term) {\n    Spotify.search(term)\n      .then(searchResults => this.setState({\n        searchResults: searchResults\n      }));\n  }\n\nrender() {\n  return (\n    <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n        <SearchBar onSearch={this.search} />\n        <div className=\"App-playlist\">\n          <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n          <Playlist playlistTracks={this.state.playlistTracks} playlistName={this.state.playlistName} onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist} />\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}